/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package TransferManagement;

import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author Piyumi
 */
public class InventoryTransferOther extends javax.swing.JFrame {

    /**
     * Creates new form InventoryTranfer
     */
    public InventoryTransferOther() {
        initComponents();
        setLocationRelativeTo(null);
        PlaceNameCombo();
        HostelNameCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jComboBox3 = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        navigationPanel1 = new javax.swing.JPanel();
        jbtnhomemenubar1 = new javax.swing.JButton();
        jbtnlogouteditprofilemenubar1 = new javax.swing.JButton();
        jbtnmanagmentmenubar1 = new javax.swing.JButton();
        jPanellogouteditprofile1 = new javax.swing.JPanel();
        jbtnlogoutmenubar2 = new javax.swing.JButton();
        jbtneditprofilemenubar2 = new javax.swing.JButton();
        jPanelmangement1 = new javax.swing.JPanel();
        jbtnmangementstudentregistrationmenubar5 = new javax.swing.JButton();
        jbtninventrymangmentmenubar2 = new javax.swing.JButton();
        jbtnmangementstudentregistrationmenubar6 = new javax.swing.JButton();
        jbtnmangementstudentregistrationmenubar7 = new javax.swing.JButton();
        jbtnmangementstudentregistrationmenubar8 = new javax.swing.JButton();
        jTextField8 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(228, 210, 253));
        jPanel2.setPreferredSize(new java.awt.Dimension(1000, 550));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setText("Item Id");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("From");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("To");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setText("Transfer Date");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setText("Transfer Reason");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextArea1KeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(jTextArea1);

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jTextArea2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextArea2KeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(jTextArea2);

        jButton1.setBackground(new java.awt.Color(0, 102, 51));
        jButton1.setFont(new java.awt.Font("Cambria", 1, 16)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Transfer");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 0, 0));

        jLabel9.setText("Not Registered ?");

        jLabel11.setText("Not Registered ?");

        jLabel13.setForeground(new java.awt.Color(255, 0, 0));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Item Type", "News Paper Holder", "Towel Rack", "Almari", "Hostel Cupboard", "Dressing Table", "Dressing Table Stool" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel14.setText("Item Type");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Place" }));

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Place" }));

        jLabel12.setForeground(new java.awt.Color(0, 0, 204));
        jLabel12.setText("Add New Place");
        jLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel12MouseClicked(evt);
            }
        });

        jLabel15.setForeground(new java.awt.Color(0, 0, 204));
        jLabel15.setText("Add New Place");
        jLabel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel15MouseClicked(evt);
            }
        });

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/other6.jpg"))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Cambria Math", 1, 22)); // NOI18N
        jLabel1.setText("Other Item Transfer Form");

        jButton2.setBackground(new java.awt.Color(222, 134, 2));
        jButton2.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton1))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel6)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel4))
                                        .addComponent(jLabel3))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(2, 2, 2))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGap(33, 33, 33)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jLabel12)
                                                        .addGap(11, 11, 11))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                                                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jComboBox3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jDateChooser1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addComponent(jButton2))))))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(28, 28, 28)))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addComponent(jLabel4))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel1)
                                .addGap(40, 40, 40)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel14))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(10, 10, 10)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(34, 34, 34))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(3, 3, 3)))
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel8)
                                .addGap(10, 10, 10)
                                .addComponent(jLabel10))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jButton1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2)))))
                .addGap(20, 20, 20))
        );

        navigationPanel1.setBackground(new java.awt.Color(228, 210, 253));

        jbtnhomemenubar1.setBackground(new java.awt.Color(0, 0, 102));
        jbtnhomemenubar1.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jbtnhomemenubar1.setForeground(new java.awt.Color(255, 255, 255));
        jbtnhomemenubar1.setText("Home");
        jbtnhomemenubar1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jbtnlogouteditprofilemenubar1.setBackground(new java.awt.Color(0, 0, 102));
        jbtnlogouteditprofilemenubar1.setFont(new java.awt.Font("Cambria", 1, 16)); // NOI18N
        jbtnlogouteditprofilemenubar1.setForeground(new java.awt.Color(255, 255, 255));
        jbtnlogouteditprofilemenubar1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jbtnlogouteditprofilemenubar1MouseMoved(evt);
            }
        });
        jbtnlogouteditprofilemenubar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnlogouteditprofilemenubar1ActionPerformed(evt);
            }
        });

        jbtnmanagmentmenubar1.setBackground(new java.awt.Color(0, 0, 102));
        jbtnmanagmentmenubar1.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jbtnmanagmentmenubar1.setForeground(new java.awt.Color(255, 255, 255));
        jbtnmanagmentmenubar1.setText("Management ");
        jbtnmanagmentmenubar1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jbtnmanagmentmenubar1MouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jbtnmanagmentmenubar1MouseMoved(evt);
            }
        });
        jbtnmanagmentmenubar1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jbtnmanagmentmenubar1FocusGained(evt);
            }
        });
        jbtnmanagmentmenubar1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbtnmanagmentmenubar1MouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jbtnmanagmentmenubar1MouseExited(evt);
            }
        });
        jbtnmanagmentmenubar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnmanagmentmenubar1ActionPerformed(evt);
            }
        });

        jPanellogouteditprofile1.setBackground(new java.awt.Color(228, 210, 253));
        jPanellogouteditprofile1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(228, 210, 253)));
        jPanellogouteditprofile1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanellogouteditprofile1MouseExited(evt);
            }
        });

        jbtnlogoutmenubar2.setBackground(new java.awt.Color(102, 102, 255));
        jbtnlogoutmenubar2.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        jbtnlogoutmenubar2.setText("LogOut");
        jbtnlogoutmenubar2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbtnlogoutmenubar2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jbtnlogoutmenubar2MouseEntered(evt);
            }
        });
        jbtnlogoutmenubar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnlogoutmenubar2ActionPerformed(evt);
            }
        });

        jbtneditprofilemenubar2.setBackground(new java.awt.Color(102, 102, 255));
        jbtneditprofilemenubar2.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        jbtneditprofilemenubar2.setText("Edit Profile");
        jbtneditprofilemenubar2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbtneditprofilemenubar2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jbtneditprofilemenubar2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jbtneditprofilemenubar2MouseExited(evt);
            }
        });
        jbtneditprofilemenubar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtneditprofilemenubar2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanellogouteditprofile1Layout = new javax.swing.GroupLayout(jPanellogouteditprofile1);
        jPanellogouteditprofile1.setLayout(jPanellogouteditprofile1Layout);
        jPanellogouteditprofile1Layout.setHorizontalGroup(
            jPanellogouteditprofile1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanellogouteditprofile1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanellogouteditprofile1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jbtneditprofilemenubar2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbtnlogoutmenubar2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanellogouteditprofile1Layout.setVerticalGroup(
            jPanellogouteditprofile1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanellogouteditprofile1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbtnlogoutmenubar2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtneditprofilemenubar2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanelmangement1.setBackground(new java.awt.Color(228, 210, 253));
        jPanelmangement1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(228, 210, 253)));
        jPanelmangement1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanelmangement1MouseDragged(evt);
            }
        });
        jPanelmangement1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPanelmangement1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jPanelmangement1FocusLost(evt);
            }
        });
        jPanelmangement1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanelmangement1MouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jPanelmangement1MouseReleased(evt);
            }
        });
        jPanelmangement1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jPanelmangement1KeyReleased(evt);
            }
        });

        jbtnmangementstudentregistrationmenubar5.setBackground(new java.awt.Color(102, 102, 255));
        jbtnmangementstudentregistrationmenubar5.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        jbtnmangementstudentregistrationmenubar5.setText("Transfer Management");
        jbtnmangementstudentregistrationmenubar5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbtnmangementstudentregistrationmenubar5.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jbtnmangementstudentregistrationmenubar5MouseMoved(evt);
            }
        });
        jbtnmangementstudentregistrationmenubar5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jbtnmangementstudentregistrationmenubar5MouseEntered(evt);
            }
        });
        jbtnmangementstudentregistrationmenubar5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnmangementstudentregistrationmenubar5ActionPerformed(evt);
            }
        });

        jbtninventrymangmentmenubar2.setBackground(new java.awt.Color(102, 102, 255));
        jbtninventrymangmentmenubar2.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        jbtninventrymangmentmenubar2.setText("Inventry Management");
        jbtninventrymangmentmenubar2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbtninventrymangmentmenubar2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbtninventrymangmentmenubar2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jbtninventrymangmentmenubar2MouseEntered(evt);
            }
        });
        jbtninventrymangmentmenubar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtninventrymangmentmenubar2ActionPerformed(evt);
            }
        });

        jbtnmangementstudentregistrationmenubar6.setBackground(new java.awt.Color(102, 102, 255));
        jbtnmangementstudentregistrationmenubar6.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        jbtnmangementstudentregistrationmenubar6.setText("Hostel Management");
        jbtnmangementstudentregistrationmenubar6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbtnmangementstudentregistrationmenubar6.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jbtnmangementstudentregistrationmenubar6MouseMoved(evt);
            }
        });
        jbtnmangementstudentregistrationmenubar6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jbtnmangementstudentregistrationmenubar6MouseEntered(evt);
            }
        });
        jbtnmangementstudentregistrationmenubar6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnmangementstudentregistrationmenubar6ActionPerformed(evt);
            }
        });

        jbtnmangementstudentregistrationmenubar7.setBackground(new java.awt.Color(102, 102, 255));
        jbtnmangementstudentregistrationmenubar7.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        jbtnmangementstudentregistrationmenubar7.setText("Student Management");
        jbtnmangementstudentregistrationmenubar7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbtnmangementstudentregistrationmenubar7.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jbtnmangementstudentregistrationmenubar7MouseMoved(evt);
            }
        });
        jbtnmangementstudentregistrationmenubar7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbtnmangementstudentregistrationmenubar7MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jbtnmangementstudentregistrationmenubar7MouseEntered(evt);
            }
        });
        jbtnmangementstudentregistrationmenubar7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnmangementstudentregistrationmenubar7ActionPerformed(evt);
            }
        });

        jbtnmangementstudentregistrationmenubar8.setBackground(new java.awt.Color(102, 102, 255));
        jbtnmangementstudentregistrationmenubar8.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        jbtnmangementstudentregistrationmenubar8.setText("Degree Management");
        jbtnmangementstudentregistrationmenubar8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbtnmangementstudentregistrationmenubar8.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jbtnmangementstudentregistrationmenubar8MouseMoved(evt);
            }
        });
        jbtnmangementstudentregistrationmenubar8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jbtnmangementstudentregistrationmenubar8MouseEntered(evt);
            }
        });
        jbtnmangementstudentregistrationmenubar8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnmangementstudentregistrationmenubar8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelmangement1Layout = new javax.swing.GroupLayout(jPanelmangement1);
        jPanelmangement1.setLayout(jPanelmangement1Layout);
        jPanelmangement1Layout.setHorizontalGroup(
            jPanelmangement1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelmangement1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelmangement1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbtninventrymangmentmenubar2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                    .addComponent(jbtnmangementstudentregistrationmenubar5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbtnmangementstudentregistrationmenubar6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbtnmangementstudentregistrationmenubar7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbtnmangementstudentregistrationmenubar8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelmangement1Layout.setVerticalGroup(
            jPanelmangement1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelmangement1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbtnmangementstudentregistrationmenubar7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(jbtninventrymangmentmenubar2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnmangementstudentregistrationmenubar5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbtnmangementstudentregistrationmenubar6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbtnmangementstudentregistrationmenubar8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 7, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout navigationPanel1Layout = new javax.swing.GroupLayout(navigationPanel1);
        navigationPanel1.setLayout(navigationPanel1Layout);
        navigationPanel1Layout.setHorizontalGroup(
            navigationPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navigationPanel1Layout.createSequentialGroup()
                .addGroup(navigationPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(navigationPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(navigationPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jbtnhomemenubar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanelmangement1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbtnmanagmentmenubar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbtnlogouteditprofilemenubar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanellogouteditprofile1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(navigationPanel1Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        navigationPanel1Layout.setVerticalGroup(
            navigationPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navigationPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jbtnhomemenubar1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbtnmanagmentmenubar1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelmangement1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbtnlogouteditprofilemenubar1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanellogouteditprofile1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(navigationPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(navigationPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 50, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 586, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextArea1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextArea1KeyTyped
        String PATTERN= "^[A-Za-z0-9/,]{0,15000}$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match=patt.matcher(jTextArea1.getText());
        if(!match.matches()){
            jLabel7.setText("Please use valid ID as UWU/FF/01 and use comma for seperate the Item Id!");
        }else{
            jLabel7.setText(null);
        }
    }//GEN-LAST:event_jTextArea1KeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

         //Validation Is Empty
        if(jComboBox1.getSelectedItem().toString().equals("Select Inventory Type")){
            JOptionPane.showMessageDialog(rootPane,"Select Item Type" );
        }
        else if(jComboBox2.getSelectedItem().toString().equals("Select Place")){
            JOptionPane.showMessageDialog(rootPane,"Enter Transfer From" );
        }
        else if(jComboBox3.getSelectedItem().toString().equals("Select Place")){
            JOptionPane.showMessageDialog(rootPane,"Enter Transfer To" );
        }
        else if(jTextArea1.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(rootPane,"Enter Transfer Items" );
        }

        else if(jTextArea2.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(rootPane,"Enter Transfer Reason" );
        }
        
        else if(jComboBox2.getSelectedItem().toString().equals(jComboBox3.getSelectedItem().toString())){
            JOptionPane.showMessageDialog(rootPane,"Transfer can not be happen in Same Place" );
        }
        else{
        String itemType = jComboBox1.getSelectedItem().toString();
        String itemId = jTextArea1.getText();
        String tFrom = jComboBox2.getSelectedItem().toString();
        String tTo = jComboBox3.getSelectedItem().toString();
        String tDate = null;
        SimpleDateFormat dFormat = new SimpleDateFormat("yyyy-MM-dd");
        tDate = dFormat.format(jDateChooser1.getDate());
        String tReason =jTextArea2.getText();

      
         if("News Paper Holder".equals(itemType)){
        try {
            connectiondb c = new connectiondb();
            Statement stmt = c.getConnectiondb().createStatement();
                      
                String arrSplit[] = itemId.split(","); 
                for (int i=0; i < arrSplit.length; i++){
                     String selectQuery="SELECT itemid FROM newspaperholder WHERE itemid='"+arrSplit[i]+"'";
                     ResultSet rs55 = stmt.executeQuery(selectQuery);
            
                    if(rs55.next()){
                  
                  String query = "SELECT * FROM newspaperholdertransfer WHERE itemid = '"+arrSplit[i]+"'";
                  ResultSet rs1 = stmt.executeQuery(query);
                    if(rs1.next()){
                 
                   String query2= "UPDATE newspaperholdertransfer,newspaperholder SET newspaperholdertransfer.transferfrom='"+tFrom+"' , newspaperholdertransfer.transferto='"+tTo+"',newspaperholdertransfer.transferdate='"+tDate+"',newspaperholdertransfer.transferreason='"+tReason+"' ,newspaperholder.place='"+tTo+"'  WHERE newspaperholdertransfer.itemid ='"+arrSplit[i]+"' and newspaperholder.itemid=newspaperholdertransfer.itemid";
                        int n1= stmt.executeUpdate(query2);
                                if(n1!=0){
                                    String query4="select systembalance from totalinventory where itemtype='News Paper Holder' and place='"+tFrom+"'";
                                    ResultSet rs4=stmt.executeQuery(query4);
                                    if(rs4.next()){
                                        String fromCount=rs4.getString("systembalance");
                                        int fc=Integer.parseInt(fromCount);
                                        
                                        String query5="select systembalance from totalinventory where itemtype='News Paper Holder' and place='"+tTo+"'";
                                        ResultSet rs5=stmt.executeQuery(query5);
                                         fc=fc-1;
                                            
                                        if(rs5.next()){
                                            String toCount=rs5.getString("systembalance");
                                            int tc=Integer.parseInt(toCount);
                                            tc=tc+1;
                                            String query6= "UPDATE totalinventory SET systembalance='"+fc+"' where itemtype='News Paper Holder' and place='"+tFrom+"'";
                                            String query7= "UPDATE totalinventory SET systembalance='"+tc+"' where itemtype='News Paper Holder' and place='"+tTo+"'";
                                            int n6= stmt.executeUpdate(query6);
                                            int n7= stmt.executeUpdate(query7);
                                            if(n6!=0 && n7!=0){
                                                JOptionPane.showMessageDialog(rootPane,"Item update succefully 1");
                                            }else{
                                                JOptionPane.showMessageDialog(rootPane,"Error while updating 1");
                                            }
                                        }else{
                                           String query9 = "INSERT INTO totalinventory (itemtype,place,systembalance) VALUES ('News Paper Holder','"+tTo+"','1')"; 
                                           String query10= "UPDATE totalinventory SET systembalance='"+fc+"' where itemtype='News Paper Holder' and place='"+tFrom+"'";
                                           int n9= stmt.executeUpdate(query9);
                                            int n10= stmt.executeUpdate(query10);
                                            if(n9!=0 && n10!=0){
                                                JOptionPane.showMessageDialog(rootPane,"Item update succefully 2");
                                            }else{
                                                JOptionPane.showMessageDialog(rootPane,"Error while updating 2");
                                            }
                                           
                                        }
                                     
                                    }
                                }else{
                                    JOptionPane.showMessageDialog(rootPane,"Error while updating");
                                }
                }else{
                        String query1 = "INSERT INTO newspaperholdertransfer (itemid,transferfrom,transferto,transferdate,transferreason) VALUES ('"+arrSplit[i]+"','"+tFrom+"', '"+tTo+"','"+tDate+"','"+tReason+"')";
                        int n2 = stmt.executeUpdate(query1);
                        if(n2!=0){
                            String query3="UPDATE newspaperholder SET place='"+tTo+"' where itemid ='"+arrSplit[i]+"'";
                            int n3 = stmt.executeUpdate(query3);
                                if(n3!=0){
                                    String query9="select systembalance from totalinventory where itemtype='News Paper Holder' and place='"+tFrom+"'";
                                    ResultSet rs9=stmt.executeQuery(query9);
                                    
                                    if(rs9.next()){
                                        String fromCount=rs9.getString("systembalance");
                                        int fc=Integer.parseInt(fromCount);
                                    
                                        String query10="select systembalance from totalinventory where itemtype='News Paper Holder' and place='"+tTo+"'";
                                        ResultSet rs10=stmt.executeQuery(query10);
                                        if(rs10.next()){
                                    
                                        String toCount=rs10.getString("systembalance");
                                        int tc=Integer.parseInt(toCount);
                                        fc=fc-1;
                                        tc=tc+1;
                                        String query6= "UPDATE totalinventory SET systembalance='"+fc+"' where itemtype='News Paper Holder' and place='"+tFrom+"'";
                                        String query7= "UPDATE totalinventory SET systembalance='"+tc+"' where itemtype='News Paper Holder' and place='"+tTo+"'";
                                        int n6= stmt.executeUpdate(query6);
                                        int n7= stmt.executeUpdate(query7);
                                        if(n6!=0 && n7!=0){
                                            JOptionPane.showMessageDialog(rootPane,"Item update succefully 3");
                                        }else{
                                            JOptionPane.showMessageDialog(rootPane,"Error while updating 3");
                                        }
                                    }    
                                    }
                            
                            }else{
                               JOptionPane.showMessageDialog(rootPane,"Error while updating 4");     
                            }
                            
                        }else{
                            JOptionPane.showMessageDialog(rootPane,"Error while updating 5");
                        }
                        
                    }
  
                }
            else{
                    JOptionPane.showMessageDialog(rootPane,"No '"+arrSplit[i]+"' in '"+itemType+"' Inventory ");
                 }
           }    
        } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null,ex.getMessage());
        }
        }
         ///
        else if("Towel Rack".equals(itemType)){
        try {
            connectiondb c = new connectiondb();
            Statement stmt = c.getConnectiondb().createStatement();
                      
                String arrSplit[] = itemId.split(","); 
                for (int i=0; i < arrSplit.length; i++){
                     String selectQuery="SELECT itemid FROM towelrack WHERE itemid='"+arrSplit[i]+"'";
                     ResultSet rs55 = stmt.executeQuery(selectQuery);
            
                    if(rs55.next()){
                  
                  String query = "SELECT * FROM towelracktransfer WHERE itemid = '"+arrSplit[i]+"'";
                  ResultSet rs1 = stmt.executeQuery(query);
                    if(rs1.next()){
                 
                   String query2= "UPDATE towelracktransfer,towelrack SET towelracktransfer.transferfrom='"+tFrom+"' ,towelracktransfer.transferto='"+tTo+"',towelracktransfer.transferdate='"+tDate+"',towelracktransfer.transferreason='"+tReason+"' ,towelrack.place='"+tTo+"'  WHERE towelracktransfer.itemid ='"+arrSplit[i]+"' and towelrack.itemid=towelracktransfer.itemid";
                        int n1= stmt.executeUpdate(query2);
                                if(n1!=0){
                                    String query4="select systembalance from totalinventory where itemtype='Towel Rack' and place='"+tFrom+"'";
                                    ResultSet rs4=stmt.executeQuery(query4);
                                    if(rs4.next()){
                                        String fromCount=rs4.getString("systembalance");
                                        int fc=Integer.parseInt(fromCount);
                                        
                                        String query5="select systembalance from totalinventory where itemtype='Towel Rack' and place='"+tTo+"'";
                                        ResultSet rs5=stmt.executeQuery(query5);
                                         fc=fc-1;
                                            
                                        if(rs5.next()){
                                            String toCount=rs5.getString("systembalance");
                                            int tc=Integer.parseInt(toCount);
                                            tc=tc+1;
                                            String query6= "UPDATE totalinventory SET systembalance='"+fc+"' where itemtype='Towel Rack' and place='"+tFrom+"'";
                                            String query7= "UPDATE totalinventory SET systembalance='"+tc+"' where itemtype='Towel Rack' and place='"+tTo+"'";
                                            int n6= stmt.executeUpdate(query6);
                                            int n7= stmt.executeUpdate(query7);
                                            if(n6!=0 && n7!=0){
                                                JOptionPane.showMessageDialog(rootPane,"Item update succefully 1");
                                            }else{
                                                JOptionPane.showMessageDialog(rootPane,"Error while updating 1");
                                            }
                                        }else{
                                           String query9 = "INSERT INTO totalinventory (itemtype,place,systembalance) VALUES ('Towel Rack','"+tTo+"','1')"; 
                                           String query10= "UPDATE totalinventory SET systembalance='"+fc+"' where itemtype='Towel Rack' and place='"+tFrom+"'";
                                           int n9= stmt.executeUpdate(query9);
                                            int n10= stmt.executeUpdate(query10);
                                            if(n9!=0 && n10!=0){
                                                JOptionPane.showMessageDialog(rootPane,"Item update succefully 2");
                                            }else{
                                                JOptionPane.showMessageDialog(rootPane,"Error while updating 2");
                                            }
                                           
                                        }
                                     
                                    }
                                }else{
                                    JOptionPane.showMessageDialog(rootPane,"Error while updating");
                                }
                }else{
                        String query1 = "INSERT INTO towelracktransfer (itemid,transferfrom,transferto,transferdate,transferreason) VALUES ('"+arrSplit[i]+"','"+tFrom+"', '"+tTo+"','"+tDate+"','"+tReason+"')";
                        int n2 = stmt.executeUpdate(query1);
                        if(n2!=0){
                            String query3="UPDATE towelrack SET place='"+tTo+"' where itemid ='"+arrSplit[i]+"'";
                            int n3 = stmt.executeUpdate(query3);
                                if(n3!=0){
                                    String query9="select systembalance from totalinventory where itemtype='Towel Rack' and place='"+tFrom+"'";
                                    ResultSet rs9=stmt.executeQuery(query9);
                                    
                                    if(rs9.next()){
                                        String fromCount=rs9.getString("systembalance");
                                        int fc=Integer.parseInt(fromCount);
                                    
                                        String query10="select systembalance from totalinventory where itemtype='Towel Rack' and place='"+tTo+"'";
                                        ResultSet rs10=stmt.executeQuery(query10);
                                        if(rs10.next()){
                                    
                                        String toCount=rs10.getString("systembalance");
                                        int tc=Integer.parseInt(toCount);
                                        fc=fc-1;
                                        tc=tc+1;
                                        String query6= "UPDATE totalinventory SET systembalance='"+fc+"' where itemtype='Towel Rack' and place='"+tFrom+"'";
                                        String query7= "UPDATE totalinventory SET systembalance='"+tc+"' where itemtype='Towel Rack' and place='"+tTo+"'";
                                        int n6= stmt.executeUpdate(query6);
                                        int n7= stmt.executeUpdate(query7);
                                        if(n6!=0 && n7!=0){
                                            JOptionPane.showMessageDialog(rootPane,"Item update succefully 3");
                                        }else{
                                            JOptionPane.showMessageDialog(rootPane,"Error while updating 3");
                                        }
                                    }    
                                    }
                            
                            }else{
                               JOptionPane.showMessageDialog(rootPane,"Error while updating 4");     
                            }
                            
                        }else{
                            JOptionPane.showMessageDialog(rootPane,"Error while updating 5");
                        }
                        
                    }
  
                }
            else{
                    JOptionPane.showMessageDialog(rootPane,"No '"+arrSplit[i]+"' in '"+itemType+"' Inventory ");
                 }
           }    
        } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null,ex.getMessage());
        }
        }
        ///
        else if("Almari".equals(itemType)){
        try {
            connectiondb c = new connectiondb();
            Statement stmt = c.getConnectiondb().createStatement();
                      
                String arrSplit[] = itemId.split(","); 
                for (int i=0; i < arrSplit.length; i++){
                     String selectQuery="SELECT itemid FROM almari WHERE itemid='"+arrSplit[i]+"'";
                     ResultSet rs55 = stmt.executeQuery(selectQuery);
            
                    if(rs55.next()){
                  
                  String query = "SELECT * FROM almaritransfer WHERE itemid = '"+arrSplit[i]+"'";
                  ResultSet rs1 = stmt.executeQuery(query);
                    if(rs1.next()){
                 
                   String query2= "UPDATE almaritransfer,almari SET almaritransfer.transferfrom='"+tFrom+"' , almaritransfer.transferto='"+tTo+"',almaritransfer.transferdate='"+tDate+"',almaritransfer.transferreason='"+tReason+"' ,almari.place='"+tTo+"'  WHERE almaritransfer.itemid ='"+arrSplit[i]+"' and almari.itemid=almaritransfer.itemid";
                        int n1= stmt.executeUpdate(query2);
                                if(n1!=0){
                                    String query4="select systembalance from totalinventory where itemtype='Almari' and place='"+tFrom+"'";
                                    ResultSet rs4=stmt.executeQuery(query4);
                                    if(rs4.next()){
                                        String fromCount=rs4.getString("systembalance");
                                        int fc=Integer.parseInt(fromCount);
                                        
                                        String query5="select systembalance from totalinventory where itemtype='Almari' and place='"+tTo+"'";
                                        ResultSet rs5=stmt.executeQuery(query5);
                                         fc=fc-1;
                                            
                                        if(rs5.next()){
                                            String toCount=rs5.getString("systembalance");
                                            int tc=Integer.parseInt(toCount);
                                            tc=tc+1;
                                            String query6= "UPDATE totalinventory SET systembalance='"+fc+"' where itemtype='Almari' and place='"+tFrom+"'";
                                            String query7= "UPDATE totalinventory SET systembalance='"+tc+"' where itemtype='Almari' and place='"+tTo+"'";
                                            int n6= stmt.executeUpdate(query6);
                                            int n7= stmt.executeUpdate(query7);
                                            if(n6!=0 && n7!=0){
                                                JOptionPane.showMessageDialog(rootPane,"Item update succefully 1");
                                            }else{
                                                JOptionPane.showMessageDialog(rootPane,"Error while updating 1");
                                            }
                                        }else{
                                           String query9 = "INSERT INTO totalinventory (itemtype,place,systembalance) VALUES ('Almari','"+tTo+"','1')"; 
                                           String query10= "UPDATE totalinventory SET systembalance='"+fc+"' where itemtype='Almari' and place='"+tFrom+"'";
                                           int n9= stmt.executeUpdate(query9);
                                            int n10= stmt.executeUpdate(query10);
                                            if(n9!=0 && n10!=0){
                                                JOptionPane.showMessageDialog(rootPane,"Item update succefully 2");
                                            }else{
                                                JOptionPane.showMessageDialog(rootPane,"Error while updating 2");
                                            }
                                           
                                        }
                                     
                                    }
                                }else{
                                    JOptionPane.showMessageDialog(rootPane,"Error while updating");
                                }
                }else{
                        String query1 = "INSERT INTO almaritransfer (itemid,transferfrom,transferto,transferdate,transferreason) VALUES ('"+arrSplit[i]+"','"+tFrom+"', '"+tTo+"','"+tDate+"','"+tReason+"')";
                        int n2 = stmt.executeUpdate(query1);
                        if(n2!=0){
                            String query3="UPDATE almari SET place='"+tTo+"' where itemid ='"+arrSplit[i]+"'";
                            int n3 = stmt.executeUpdate(query3);
                                if(n3!=0){
                                    String query9="select systembalance from totalinventory where itemtype='Almari' and place='"+tFrom+"'";
                                    ResultSet rs9=stmt.executeQuery(query9);
                                    
                                    if(rs9.next()){
                                        String fromCount=rs9.getString("systembalance");
                                        int fc=Integer.parseInt(fromCount);
                                    
                                        String query10="select systembalance from totalinventory where itemtype='Almari' and place='"+tTo+"'";
                                        ResultSet rs10=stmt.executeQuery(query10);
                                        if(rs10.next()){
                                    
                                        String toCount=rs10.getString("systembalance");
                                        int tc=Integer.parseInt(toCount);
                                        fc=fc-1;
                                        tc=tc+1;
                                        String query6= "UPDATE totalinventory SET systembalance='"+fc+"' where itemtype='Almari' and place='"+tFrom+"'";
                                        String query7= "UPDATE totalinventory SET systembalance='"+tc+"' where itemtype='Almari' and place='"+tTo+"'";
                                        int n6= stmt.executeUpdate(query6);
                                        int n7= stmt.executeUpdate(query7);
                                        if(n6!=0 && n7!=0){
                                            JOptionPane.showMessageDialog(rootPane,"Item update succefully 3");
                                        }else{
                                            JOptionPane.showMessageDialog(rootPane,"Error while updating 3");
                                        }
                                    }    
                                    }
                            
                            }else{
                               JOptionPane.showMessageDialog(rootPane,"Error while updating 4");     
                            }
                            
                        }else{
                            JOptionPane.showMessageDialog(rootPane,"Error while updating 5");
                        }
                        
                    }
  
                }
            else{
                    JOptionPane.showMessageDialog(rootPane,"No '"+arrSplit[i]+"' in '"+itemType+"' Inventory ");
                 }
           }    
        } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null,ex.getMessage());
        }
        }
//
        else if("Hostel Cupboard".equals(itemType)){
        try {
            connectiondb c = new connectiondb();
            Statement stmt = c.getConnectiondb().createStatement();
                      
                String arrSplit[] = itemId.split(","); 
                for (int i=0; i < arrSplit.length; i++){
                     String selectQuery="SELECT itemid FROM hostelcupboard WHERE itemid='"+arrSplit[i]+"'";
                     ResultSet rs55 = stmt.executeQuery(selectQuery);
            
                    if(rs55.next()){
                  
                  String query = "SELECT * FROM hostelcupboardtransfer WHERE itemid = '"+arrSplit[i]+"'";
                  ResultSet rs1 = stmt.executeQuery(query);
                    if(rs1.next()){
                 
                   String query2= "UPDATE hostelcupboardtransfer,hostelcupboard SET hostelcupboardtransfer.transferfrom='"+tFrom+"' , hostelcupboardtransfer.transferto='"+tTo+"',hostelcupboardtransfer.transferdate='"+tDate+"',hostelcupboardtransfer.transferreason='"+tReason+"' ,hostelcupboard.place='"+tTo+"'  WHERE hostelcupboardtransfer.itemid ='"+arrSplit[i]+"' and hostelcupboard.itemid=hostelcupboardtransfer.itemid";
                        int n1= stmt.executeUpdate(query2);
                                if(n1!=0){
                                    String query4="select systembalance from totalinventory where itemtype='Hostel Cupboard' and place='"+tFrom+"'";
                                    ResultSet rs4=stmt.executeQuery(query4);
                                    if(rs4.next()){
                                        String fromCount=rs4.getString("systembalance");
                                        int fc=Integer.parseInt(fromCount);
                                        
                                        String query5="select systembalance from totalinventory where itemtype='Hostel Cupboard' and place='"+tTo+"'";
                                        ResultSet rs5=stmt.executeQuery(query5);
                                         fc=fc-1;
                                            
                                        if(rs5.next()){
                                            String toCount=rs5.getString("systembalance");
                                            int tc=Integer.parseInt(toCount);
                                            tc=tc+1;
                                            String query6= "UPDATE totalinventory SET systembalance='"+fc+"' where itemtype='Hostel Cupboard' and place='"+tFrom+"'";
                                            String query7= "UPDATE totalinventory SET systembalance='"+tc+"' where itemtype='Hostel Cupboard' and place='"+tTo+"'";
                                            int n6= stmt.executeUpdate(query6);
                                            int n7= stmt.executeUpdate(query7);
                                            if(n6!=0 && n7!=0){
                                                JOptionPane.showMessageDialog(rootPane,"Item update succefully 1");
                                            }else{
                                                JOptionPane.showMessageDialog(rootPane,"Error while updating 1");
                                            }
                                        }else{
                                           String query9 = "INSERT INTO totalinventory (itemtype,place,systembalance) VALUES ('Hostel Cupboard','"+tTo+"','1')"; 
                                           String query10= "UPDATE totalinventory SET systembalance='"+fc+"' where itemtype='Hostel Cupboard' and place='"+tFrom+"'";
                                           int n9= stmt.executeUpdate(query9);
                                            int n10= stmt.executeUpdate(query10);
                                            if(n9!=0 && n10!=0){
                                                JOptionPane.showMessageDialog(rootPane,"Item update succefully 2");
                                            }else{
                                                JOptionPane.showMessageDialog(rootPane,"Error while updating 2");
                                            }
                                           
                                        }
                                     
                                    }
                                }else{
                                    JOptionPane.showMessageDialog(rootPane,"Error while updating");
                                }
                }else{
                        String query1 = "INSERT INTO hostelcupboardtransfer (itemid,transferfrom,transferto,transferdate,transferreason) VALUES ('"+arrSplit[i]+"','"+tFrom+"', '"+tTo+"','"+tDate+"','"+tReason+"')";
                        int n2 = stmt.executeUpdate(query1);
                        if(n2!=0){
                            String query3="UPDATE hostelcupboard SET place='"+tTo+"' where itemid ='"+arrSplit[i]+"'";
                            int n3 = stmt.executeUpdate(query3);
                                if(n3!=0){
                                    String query9="select systembalance from totalinventory where itemtype='Hostel Cupboard' and place='"+tFrom+"'";
                                    ResultSet rs9=stmt.executeQuery(query9);
                                    
                                    if(rs9.next()){
                                        String fromCount=rs9.getString("systembalance");
                                        int fc=Integer.parseInt(fromCount);
                                    
                                        String query10="select systembalance from totalinventory where itemtype='Hostel Cupboard' and place='"+tTo+"'";
                                        ResultSet rs10=stmt.executeQuery(query10);
                                        if(rs10.next()){
                                    
                                        String toCount=rs10.getString("systembalance");
                                        int tc=Integer.parseInt(toCount);
                                        fc=fc-1;
                                        tc=tc+1;
                                        String query6= "UPDATE totalinventory SET systembalance='"+fc+"' where itemtype='Hostel Cupboard' and place='"+tFrom+"'";
                                        String query7= "UPDATE totalinventory SET systembalance='"+tc+"' where itemtype='Hostel Cupboard' and place='"+tTo+"'";
                                        int n6= stmt.executeUpdate(query6);
                                        int n7= stmt.executeUpdate(query7);
                                        if(n6!=0 && n7!=0){
                                            JOptionPane.showMessageDialog(rootPane,"Item update succefully 3");
                                        }else{
                                            JOptionPane.showMessageDialog(rootPane,"Error while updating 3");
                                        }
                                    }    
                                    }
                            
                            }else{
                               JOptionPane.showMessageDialog(rootPane,"Error while updating 4");     
                            }
                            
                        }else{
                            JOptionPane.showMessageDialog(rootPane,"Error while updating 5");
                        }
                        
                    }
  
                }
            else{
                    JOptionPane.showMessageDialog(rootPane,"No '"+arrSplit[i]+"' in '"+itemType+"' Inventory ");
                 }
           }    
        } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null,ex.getMessage());
        }
        }
         ///
        else if("Dressing Table".equals(itemType)){
        try {
            connectiondb c = new connectiondb();
            Statement stmt = c.getConnectiondb().createStatement();
                      
                String arrSplit[] = itemId.split(","); 
                for (int i=0; i < arrSplit.length; i++){
                     String selectQuery="SELECT itemid FROM dressingtable WHERE itemid='"+arrSplit[i]+"'";
                     ResultSet rs55 = stmt.executeQuery(selectQuery);
            
                    if(rs55.next()){
                  
                  String query = "SELECT * FROM dressingtabletransfer WHERE itemid = '"+arrSplit[i]+"'";
                  ResultSet rs1 = stmt.executeQuery(query);
                    if(rs1.next()){
                 
                   String query2= "UPDATE dressingtabletransfer,dressingtable SET dressingtabletransfer.transferfrom='"+tFrom+"' , dressingtabletransfer.transferto='"+tTo+"',dressingtabletransfer.transferdate='"+tDate+"',dressingtabledtransfer.transferreason='"+tReason+"' ,dressingtable.place='"+tTo+"'  WHERE dressingtabletransfer.itemid ='"+arrSplit[i]+"' and dressingtable.itemid=dressingtabletransfer.itemid";
                        int n1= stmt.executeUpdate(query2);
                                if(n1!=0){
                                    String query4="select systembalance from totalinventory where itemtype='Dressing Table' and place='"+tFrom+"'";
                                    ResultSet rs4=stmt.executeQuery(query4);
                                    if(rs4.next()){
                                        String fromCount=rs4.getString("systembalance");
                                        int fc=Integer.parseInt(fromCount);
                                        
                                        String query5="select systembalance from totalinventory where itemtype='Dressing Table' and place='"+tTo+"'";
                                        ResultSet rs5=stmt.executeQuery(query5);
                                         fc=fc-1;
                                            
                                        if(rs5.next()){
                                            String toCount=rs5.getString("systembalance");
                                            int tc=Integer.parseInt(toCount);
                                            tc=tc+1;
                                            String query6= "UPDATE totalinventory SET systembalance='"+fc+"' where itemtype='Dressing Table' and place='"+tFrom+"'";
                                            String query7= "UPDATE totalinventory SET systembalance='"+tc+"' where itemtype='Dressing Table' and place='"+tTo+"'";
                                            int n6= stmt.executeUpdate(query6);
                                            int n7= stmt.executeUpdate(query7);
                                            if(n6!=0 && n7!=0){
                                                JOptionPane.showMessageDialog(rootPane,"Item update succefully 1");
                                            }else{
                                                JOptionPane.showMessageDialog(rootPane,"Error while updating 1");
                                            }
                                        }else{
                                           String query9 = "INSERT INTO totalinventory (itemtype,place,systembalance) VALUES ('Dressing Table','"+tTo+"','1')"; 
                                           String query10= "UPDATE totalinventory SET systembalance='"+fc+"' where itemtype='Dressing Table' and place='"+tFrom+"'";
                                           int n9= stmt.executeUpdate(query9);
                                            int n10= stmt.executeUpdate(query10);
                                            if(n9!=0 && n10!=0){
                                                JOptionPane.showMessageDialog(rootPane,"Item update succefully 2");
                                            }else{
                                                JOptionPane.showMessageDialog(rootPane,"Error while updating 2");
                                            }
                                           
                                        }
                                     
                                    }
                                }else{
                                    JOptionPane.showMessageDialog(rootPane,"Error while updating");
                                }
                }else{
                        String query1 = "INSERT INTO dressingtabletransfer (itemid,transferfrom,transferto,transferdate,transferreason) VALUES ('"+arrSplit[i]+"','"+tFrom+"', '"+tTo+"','"+tDate+"','"+tReason+"')";
                        int n2 = stmt.executeUpdate(query1);
                        if(n2!=0){
                            String query3="UPDATE dressingtable SET place='"+tTo+"' where itemid ='"+arrSplit[i]+"'";
                            int n3 = stmt.executeUpdate(query3);
                                if(n3!=0){
                                    String query9="select systembalance from totalinventory where itemtype='Dressing Table' and place='"+tFrom+"'";
                                    ResultSet rs9=stmt.executeQuery(query9);
                                    
                                    if(rs9.next()){
                                        String fromCount=rs9.getString("systembalance");
                                        int fc=Integer.parseInt(fromCount);
                                    
                                        String query10="select systembalance from totalinventory where itemtype='Dressing Table' and place='"+tTo+"'";
                                        ResultSet rs10=stmt.executeQuery(query10);
                                        if(rs10.next()){
                                    
                                        String toCount=rs10.getString("systembalance");
                                        int tc=Integer.parseInt(toCount);
                                        fc=fc-1;
                                        tc=tc+1;
                                        String query6= "UPDATE totalinventory SET systembalance='"+fc+"' where itemtype='Dressing Table' and place='"+tFrom+"'";
                                        String query7= "UPDATE totalinventory SET systembalance='"+tc+"' where itemtype='Dressing Table' and place='"+tTo+"'";
                                        int n6= stmt.executeUpdate(query6);
                                        int n7= stmt.executeUpdate(query7);
                                        if(n6!=0 && n7!=0){
                                            JOptionPane.showMessageDialog(rootPane,"Item update succefully 3");
                                        }else{
                                            JOptionPane.showMessageDialog(rootPane,"Error while updating 3");
                                        }
                                    }    
                                    }
                            
                            }else{
                               JOptionPane.showMessageDialog(rootPane,"Error while updating 4");     
                            }
                            
                        }else{
                            JOptionPane.showMessageDialog(rootPane,"Error while updating 5");
                        }
                        
                    }
  
                }
            else{
                    JOptionPane.showMessageDialog(rootPane,"No '"+arrSplit[i]+"' in '"+itemType+"' Inventory ");
                 }
           }    
        } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null,ex.getMessage());
        }
        }
         //
        else if("Dressing Table Stool".equals(itemType)){
        try {
            connectiondb c = new connectiondb();
            Statement stmt = c.getConnectiondb().createStatement();
                      
                String arrSplit[] = itemId.split(","); 
                for (int i=0; i < arrSplit.length; i++){
                     String selectQuery="SELECT itemid FROM dressingtablestool WHERE itemid='"+arrSplit[i]+"'";
                     ResultSet rs55 = stmt.executeQuery(selectQuery);
            
                    if(rs55.next()){
                  
                  String query = "SELECT * FROM dressingtablestooltransfer WHERE itemid = '"+arrSplit[i]+"'";
                  ResultSet rs1 = stmt.executeQuery(query);
                    if(rs1.next()){
                 
                   String query2= "UPDATE dressingtablestooltransfer,dressingtablestool SET dressingtablestooltransfer.transferfrom='"+tFrom+"' , dressingtablestooltransfer.transferto='"+tTo+"',dressingtablestooltransfer.transferdate='"+tDate+"',dressingtablestooltransfer.transferreason='"+tReason+"' ,dressingtablestool.place='"+tTo+"'  WHERE dressingtablestooltransfer.itemid ='"+arrSplit[i]+"' and dressingtablestool.itemid=dressingtablestooltransfer.itemid";
                        int n1= stmt.executeUpdate(query2);
                                if(n1!=0){
                                    String query4="select systembalance from totalinventory where itemtype='Dressing Table Stool' and place='"+tFrom+"'";
                                    ResultSet rs4=stmt.executeQuery(query4);
                                    if(rs4.next()){
                                        String fromCount=rs4.getString("systembalance");
                                        int fc=Integer.parseInt(fromCount);
                                        
                                        String query5="select systembalance from totalinventory where itemtype='Dressing Table Stool' and place='"+tTo+"'";
                                        ResultSet rs5=stmt.executeQuery(query5);
                                         fc=fc-1;
                                            
                                        if(rs5.next()){
                                            String toCount=rs5.getString("systembalance");
                                            int tc=Integer.parseInt(toCount);
                                            tc=tc+1;
                                            String query6= "UPDATE totalinventory SET systembalance='"+fc+"' where itemtype='Dressing Table Stool' and place='"+tFrom+"'";
                                            String query7= "UPDATE totalinventory SET systembalance='"+tc+"' where itemtype='Dressing Table Stool' and place='"+tTo+"'";
                                            int n6= stmt.executeUpdate(query6);
                                            int n7= stmt.executeUpdate(query7);
                                            if(n6!=0 && n7!=0){
                                                JOptionPane.showMessageDialog(rootPane,"Item update succefully 1");
                                            }else{
                                                JOptionPane.showMessageDialog(rootPane,"Error while updating 1");
                                            }
                                        }else{
                                           String query9 = "INSERT INTO totalinventory (itemtype,place,systembalance) VALUES ('Dressing Table Stool','"+tTo+"','1')"; 
                                           String query10= "UPDATE totalinventory SET systembalance='"+fc+"' where itemtype='Dressing Table Stool' and place='"+tFrom+"'";
                                           int n9= stmt.executeUpdate(query9);
                                            int n10= stmt.executeUpdate(query10);
                                            if(n9!=0 && n10!=0){
                                                JOptionPane.showMessageDialog(rootPane,"Item update succefully 2");
                                            }else{
                                                JOptionPane.showMessageDialog(rootPane,"Error while updating 2");
                                            }
                                           
                                        }
                                     
                                    }
                                }else{
                                    JOptionPane.showMessageDialog(rootPane,"Error while updating");
                                }
                }else{
                        String query1 = "INSERT INTO dressingtablestooltransfer (itemid,transferfrom,transferto,transferdate,transferreason) VALUES ('"+arrSplit[i]+"','"+tFrom+"', '"+tTo+"','"+tDate+"','"+tReason+"')";
                        int n2 = stmt.executeUpdate(query1);
                        if(n2!=0){
                            String query3="UPDATE dressingtablestool SET place='"+tTo+"' where itemid ='"+arrSplit[i]+"'";
                            int n3 = stmt.executeUpdate(query3);
                                if(n3!=0){
                                    String query9="select systembalance from totalinventory where itemtype='Dressing Table Stool' and place='"+tFrom+"'";
                                    ResultSet rs9=stmt.executeQuery(query9);
                                    
                                    if(rs9.next()){
                                        String fromCount=rs9.getString("systembalance");
                                        int fc=Integer.parseInt(fromCount);
                                    
                                        String query10="select systembalance from totalinventory where itemtype='Dressing Table Stool' and place='"+tTo+"'";
                                        ResultSet rs10=stmt.executeQuery(query10);
                                        if(rs10.next()){
                                    
                                        String toCount=rs10.getString("systembalance");
                                        int tc=Integer.parseInt(toCount);
                                        fc=fc-1;
                                        tc=tc+1;
                                        String query6= "UPDATE totalinventory SET systembalance='"+fc+"' where itemtype='Dressing Table Stool' and place='"+tFrom+"'";
                                        String query7= "UPDATE totalinventory SET systembalance='"+tc+"' where itemtype='Dressing Table Stool' and place='"+tTo+"'";
                                        int n6= stmt.executeUpdate(query6);
                                        int n7= stmt.executeUpdate(query7);
                                        if(n6!=0 && n7!=0){
                                            JOptionPane.showMessageDialog(rootPane,"Item update succefully 3");
                                        }else{
                                            JOptionPane.showMessageDialog(rootPane,"Error while updating 3");
                                        }
                                    }    
                                    }
                            
                            }else{
                               JOptionPane.showMessageDialog(rootPane,"Error while updating 4");     
                            }
                            
                        }else{
                            JOptionPane.showMessageDialog(rootPane,"Error while updating 5");
                        }
                        
                    }
  
                }
            else{
                    JOptionPane.showMessageDialog(rootPane,"No '"+arrSplit[i]+"' in '"+itemType+"' Inventory ");
                 }
           }    
        } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null,ex.getMessage());
        }
        }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jTextArea2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextArea2KeyTyped
       String PATTERN= "^[A-Z a-z,]{0,30}$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match=patt.matcher(jTextArea2.getText());
        if(!match.matches()){
        jLabel13.setText("Please use letters only");
        }else{
        jLabel13.setText(null);
        }
    }//GEN-LAST:event_jTextArea2KeyTyped

    private void jLabel12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseClicked
                                       
          new newplaceregistration().setVisible(true);
     
    }//GEN-LAST:event_jLabel12MouseClicked

    private void jLabel15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseClicked
         new newplaceregistration().setVisible(true);
    }//GEN-LAST:event_jLabel15MouseClicked

    private void jbtnlogouteditprofilemenubar1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnlogouteditprofilemenubar1MouseMoved
       // jPanellogouteditprofile.setVisible(true);
    }//GEN-LAST:event_jbtnlogouteditprofilemenubar1MouseMoved

    private void jbtnlogouteditprofilemenubar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnlogouteditprofilemenubar1ActionPerformed
       // jPanellogouteditprofile.setVisible(true);
    }//GEN-LAST:event_jbtnlogouteditprofilemenubar1ActionPerformed

    private void jbtnmanagmentmenubar1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnmanagmentmenubar1MouseDragged
        // jPanel2.setVisible(false);
    }//GEN-LAST:event_jbtnmanagmentmenubar1MouseDragged

    private void jbtnmanagmentmenubar1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnmanagmentmenubar1MouseMoved
       // jPanelmangement.setVisible(true);
    }//GEN-LAST:event_jbtnmanagmentmenubar1MouseMoved

    private void jbtnmanagmentmenubar1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jbtnmanagmentmenubar1FocusGained

    }//GEN-LAST:event_jbtnmanagmentmenubar1FocusGained

    private void jbtnmanagmentmenubar1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnmanagmentmenubar1MouseClicked
        //jPanel2.setVisible(true);
    }//GEN-LAST:event_jbtnmanagmentmenubar1MouseClicked

    private void jbtnmanagmentmenubar1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnmanagmentmenubar1MouseExited
        //jPanel2.setVisible(false);
    }//GEN-LAST:event_jbtnmanagmentmenubar1MouseExited

    private void jbtnmanagmentmenubar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnmanagmentmenubar1ActionPerformed
        // jPanel2.setVisible(true);
    }//GEN-LAST:event_jbtnmanagmentmenubar1ActionPerformed

    private void jbtnlogoutmenubar2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnlogoutmenubar2MouseEntered
        //jPanellogouteditprofile.setVisible(true);
    }//GEN-LAST:event_jbtnlogoutmenubar2MouseEntered

    private void jbtnlogoutmenubar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnlogoutmenubar2ActionPerformed
       // Login l = new Login();
        dispose();
        //l.setVisible(true);
    }//GEN-LAST:event_jbtnlogoutmenubar2ActionPerformed

    private void jbtneditprofilemenubar2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtneditprofilemenubar2MouseEntered
        //jPanellogouteditprofile.setVisible(true);
    }//GEN-LAST:event_jbtneditprofilemenubar2MouseEntered

    private void jbtneditprofilemenubar2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtneditprofilemenubar2MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jbtneditprofilemenubar2MouseExited

    private void jbtneditprofilemenubar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtneditprofilemenubar2ActionPerformed

        //String user1 = jTextField1.getText();
        // new Adminprofile(user1).setVisible(true);
        //jPanellogouteditprofile.setVisible(false);
    }//GEN-LAST:event_jbtneditprofilemenubar2ActionPerformed

    private void jPanellogouteditprofile1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanellogouteditprofile1MouseExited
        //jPanellogouteditprofile.setVisible(false);
    }//GEN-LAST:event_jPanellogouteditprofile1MouseExited

    private void jbtnmangementstudentregistrationmenubar5MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnmangementstudentregistrationmenubar5MouseMoved

    }//GEN-LAST:event_jbtnmangementstudentregistrationmenubar5MouseMoved

    private void jbtnmangementstudentregistrationmenubar5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnmangementstudentregistrationmenubar5MouseEntered
       // jPanelmangement.setVisible(true);
    }//GEN-LAST:event_jbtnmangementstudentregistrationmenubar5MouseEntered

    private void jbtnmangementstudentregistrationmenubar5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnmangementstudentregistrationmenubar5ActionPerformed
        // jPanel2.setVisible(true);
        //StudentRegistration s = new  StudentRegistration();
        //s.setVisible(true);
    }//GEN-LAST:event_jbtnmangementstudentregistrationmenubar5ActionPerformed

    private void jbtninventrymangmentmenubar2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtninventrymangmentmenubar2MouseClicked
        // TODO add your handling code here:
        //jPanelmangement.setVisible(true);
    }//GEN-LAST:event_jbtninventrymangmentmenubar2MouseClicked

    private void jbtninventrymangmentmenubar2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtninventrymangmentmenubar2MouseEntered
       // jPanelmangement.setVisible(true);
    }//GEN-LAST:event_jbtninventrymangmentmenubar2MouseEntered

    private void jbtninventrymangmentmenubar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtninventrymangmentmenubar2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jbtninventrymangmentmenubar2ActionPerformed

    private void jbtnmangementstudentregistrationmenubar6MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnmangementstudentregistrationmenubar6MouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jbtnmangementstudentregistrationmenubar6MouseMoved

    private void jbtnmangementstudentregistrationmenubar6MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnmangementstudentregistrationmenubar6MouseEntered
        // TODO add your handling code here:
        //jPanelmangement.setVisible(true);
    }//GEN-LAST:event_jbtnmangementstudentregistrationmenubar6MouseEntered

    private void jbtnmangementstudentregistrationmenubar6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnmangementstudentregistrationmenubar6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jbtnmangementstudentregistrationmenubar6ActionPerformed

    private void jbtnmangementstudentregistrationmenubar7MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnmangementstudentregistrationmenubar7MouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jbtnmangementstudentregistrationmenubar7MouseMoved

    private void jbtnmangementstudentregistrationmenubar7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnmangementstudentregistrationmenubar7MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jbtnmangementstudentregistrationmenubar7MouseClicked

    private void jbtnmangementstudentregistrationmenubar7MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnmangementstudentregistrationmenubar7MouseEntered
        // TODO add your handling code here:
        //jPanelmangement.setVisible(true);
    }//GEN-LAST:event_jbtnmangementstudentregistrationmenubar7MouseEntered

    private void jbtnmangementstudentregistrationmenubar7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnmangementstudentregistrationmenubar7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jbtnmangementstudentregistrationmenubar7ActionPerformed

    private void jbtnmangementstudentregistrationmenubar8MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnmangementstudentregistrationmenubar8MouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jbtnmangementstudentregistrationmenubar8MouseMoved

    private void jbtnmangementstudentregistrationmenubar8MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnmangementstudentregistrationmenubar8MouseEntered
        // TODO add your handling code here:
        //jPanelmangement.setVisible(true);
    }//GEN-LAST:event_jbtnmangementstudentregistrationmenubar8MouseEntered

    private void jbtnmangementstudentregistrationmenubar8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnmangementstudentregistrationmenubar8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jbtnmangementstudentregistrationmenubar8ActionPerformed

    private void jPanelmangement1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelmangement1MouseDragged
        //jPanel2.setVisible(false);
    }//GEN-LAST:event_jPanelmangement1MouseDragged

    private void jPanelmangement1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPanelmangement1FocusGained
        //jPanel2.setVisible(true);
    }//GEN-LAST:event_jPanelmangement1FocusGained

    private void jPanelmangement1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPanelmangement1FocusLost
        //jPanel2.setVisible(false);
    }//GEN-LAST:event_jPanelmangement1FocusLost

    private void jPanelmangement1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelmangement1MouseExited
       // jPanelmangement.setVisible(false);
    }//GEN-LAST:event_jPanelmangement1MouseExited

    private void jPanelmangement1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelmangement1MouseReleased
        //jPanel2.setVisible(false);
    }//GEN-LAST:event_jPanelmangement1MouseReleased

    private void jPanelmangement1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanelmangement1KeyReleased
        //jPanel2.setVisible(false);
    }//GEN-LAST:event_jPanelmangement1KeyReleased

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        new SelectTransferInventory().setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    
   
        private void HostelNameCombo(){
          try{
            InventoryRegistration.connectiondb c=new InventoryRegistration.connectiondb();
            Statement stmt=c.getConnectiondb().createStatement();
            String selectQuery="select hostelname from hostel";
            ResultSet rs=stmt.executeQuery(selectQuery);
            while(rs.next())
            {
                String hostelName=rs.getString("hostelname");
                jComboBox2.addItem(hostelName);
                jComboBox3.addItem(hostelName);
            }
                  }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
     }
    
          private void PlaceNameCombo(){
          try{
            InventoryRegistration.connectiondb c=new InventoryRegistration.connectiondb();
            Statement stmt=c.getConnectiondb().createStatement();
            
            String selectQuery="select placename from newplace";
            ResultSet rs=stmt.executeQuery(selectQuery);
            while(rs.next())
            {
                String newPlace=rs.getString("placename");
                jComboBox2.addItem(newPlace);
                jComboBox3.addItem(newPlace);
            }
                  }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
     }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InventoryTransferOther.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InventoryTransferOther.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InventoryTransferOther.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InventoryTransferOther.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InventoryTransferOther().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanellogouteditprofile1;
    private javax.swing.JPanel jPanelmangement1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JButton jbtneditprofilemenubar2;
    private javax.swing.JButton jbtnhomemenubar1;
    private javax.swing.JButton jbtninventrymangmentmenubar2;
    private javax.swing.JButton jbtnlogouteditprofilemenubar1;
    private javax.swing.JButton jbtnlogoutmenubar2;
    private javax.swing.JButton jbtnmanagmentmenubar1;
    private javax.swing.JButton jbtnmangementstudentregistrationmenubar5;
    private javax.swing.JButton jbtnmangementstudentregistrationmenubar6;
    private javax.swing.JButton jbtnmangementstudentregistrationmenubar7;
    private javax.swing.JButton jbtnmangementstudentregistrationmenubar8;
    private javax.swing.JPanel navigationPanel1;
    // End of variables declaration//GEN-END:variables
}
